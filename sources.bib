@book{osherove_art_2015,
	address = {Frechen},
	edition = {2nd ed},
	title = {The {Art} of {Unit} {Testing}: {Deutsche} {Ausgabe}},
	isbn = {978-3-8266-8721-1},
	shorttitle = {The {Art} of {Unit} {Testing}},
	abstract = {Unit Testing: GrundlagenTest-Hierarchien und -OrganisationMit Legacy Code arbeitenDas einzige deutsche Buch zu Unit Testing mit .NETVieles wäre besser, wenn Software fehlerfrei wäre. Leider tendiert sie dazu, Fehler zu beinhalten. Daher wird Software normalerweise während der Entwicklung getestet; jedoch kann dies gerade bei großen Projekten ein mühsames Unterfangen sein. Unit Tests sind Programme, die überprüfen, ob die von den Entwicklern geschriebenen Komponenten so arbeiten, wie diese es beabsichtigen. Dieses Buch führt den Leser Schritt für Schritt von einfachen Tests bis hin zu Tests, mit},
	language = {ger},
	publisher = {Mitp},
	author = {Osherove, Roy and Feathers, Michael and Martin, Robert C.},
	year = {2015},
	note = {OCLC: 903858649},
	annote = {A unit test is a piece of a code (usually a method) that invokes another piece of code and checks the correctness of some assumptions afterward. If the assumptions turn out to be wrong, the unit test has failed. A unit is a method or function.
},
}

@book{madeyski_test-driven_2010,
	address = {Heidelberg ; New York},
	title = {Test-driven development: an empirical evaluation of agile practice},
	isbn = {978-3-642-04287-4 978-3-642-04288-1},
	shorttitle = {Test-driven development},
	publisher = {Springer-Verlag},
	author = {Madeyski, Lech},
	year = {2010},
	note = {OCLC: ocn436030978},
	keywords = {Agile software development},
}

@book{farcic_test-driven_2018,
	address = {Birmingham},
	edition = {2nd ed},
	title = {Test-{Driven} {Java} {Development}, {Second} {Edition}: {Invoke} {TDD} principles for end-to-end application development, 2nd {Edition}},
	isbn = {978-1-78883-212-0},
	shorttitle = {Test-{Driven} {Java} {Development}, {Second} {Edition}},
	abstract = {Test-driven development relies on a test-first procedure that emphasizes writing a test before the code, and then refactoring the code to optimize it. Performing TDD with Java improves the productivity of programmers and maintainability and performance of code. It also develops a deeper understanding of the language and shows how to employ it},
	language = {eng},
	publisher = {Packt Publishing},
	author = {Farcic, Viktor and Garcia, Alex},
	year = {2018},
	note = {OCLC: 1030822111},
}

@misc{oracle_java_nodate,
	title = {The {Java} {API} for {RESTful} {Web} {Services} ({JAX}-{RS}) -- {Rapidly} {Build} {Lightweight} {Web} {Services}},
	url = {https://www.oracle.com/technical-resources/articles/java/jax-rs.html},
	urldate = {2023-01-17},
	author = {Oracle},
	file = {The Java API for RESTful Web Services (JAX-RS) -- Rapidly Build Lightweight Web Services:C\:\\Users\\SurfinBird\\Zotero\\storage\\TGHXR4EA\\jax-rs.html:text/html},
}

@book{martin_clean_2009,
	address = {Frechen Hamburg},
	edition = {Deutsche Ausgabe, 1. Auflage},
	title = {Clean {Code}: {Refactoring}, {Patterns}, {Testen} und {Techniken} für sauberen {Code}},
	isbn = {978-3-8266-5548-7},
	shorttitle = {Clean {Code}},
	language = {ger},
	publisher = {mitp},
	author = {Martin, Robert C. and Martin, Robert C.},
	translator = {Engel, Reinhard},
	collaborator = {Feathers, Michael C.},
	year = {2009},
	annote = {Literaturverzeichnis: Seiten 463-464},
	file = {Table of Contents PDF:files/40/Martin and Martin - 2009 - Clean Code Refactoring, Patterns, Testen und Tech.pdf:application/pdf},
}

@article{mudholkar_software_2015,
	title = {Software {Testing}},
	volume = {2},
	issn = {2349-6002},
	abstract = {Software testing is an investigation
	conducted to provide stakeholders with
	information about the quality of the product or
	service under test Software testing can also
	provide an objective, independent view of
	thesoftware to allow the business to appreciate
	and understand the risks of software
	implementation.In this paper we will discuss
	about testing levels suct as alpha testing , beta
	testing, unit testing , integrity testing, testing
	cycle and their requirement n comparison
	between varius testing such as static and dynamic
	testing.},
	language = {eng},
	number = {6},
	author = {Mudholkar, Pankaj and Mudholkar, Megha and Snehal, Kulkarni},
	month = nov,
	year = {2015},
	journal={Proceedings of the International Conference and Workshop on Emerging Trends in Technology},
}

@article{Rajamanickam2016PrinciplesAG,
  title={Principles and Goals of Software Testing},
  author={Leelavathi Rajamanickam},
  journal={International Journal of Advanced engineering, Management and Science},
  year={2016},
  volume={2},
  pages={239455}
}

@inproceedings{inproceedings,
author = {Jamil, Abid and Arif, Muhammad and Abubakar, Normi and Ahmad, Akhlaq},
year = {2016},
month = {11},
pages = {177-182},
title = {Software Testing Techniques: A Literature Review},
doi = {10.1109/ICT4M.2016.045}
}